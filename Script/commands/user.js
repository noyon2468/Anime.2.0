module.exports.config = { name: "user", version: "2.0.0", hasPermssion: 2, credits: "ржирзВрж░ ржорзЛрж╣рж╛ржорзНржоржж + ChatGPT", description: "ржЗржЙржЬрж╛рж░ ржмрзНржпрж╛ржи/ржЖржиржмрзНржпрж╛ржи, ржХржорж╛ржирзНржб ржмрзНржпрж╛ржи, рж╕рж╛рж░рзНржЪ, рж▓рж┐рж╕рзНржЯ ржЗрждрзНржпрж╛ржжрж┐ред", commandCategory: "system", usages: "[ban/unban/search/list/info/banCommand/unbanCommand] [UID or ржирж╛ржо]", cooldowns: 5 };

module.exports.run = async ({ api, event, args, Users }) => { const { threadID, messageID, senderID } = event; const subCmd = args[0]; let targetID = args[1]; const reason = args.slice(2).join(" ") || null;

if (!targetID && event.messageReply) targetID = event.messageReply.senderID; if (!targetID && Object.keys(event.mentions).length > 0) targetID = Object.keys(event.mentions)[0];

if (!targetID || isNaN(targetID)) return api.sendMessage("тЪая╕П рж╕ржарж┐ржХржнрж╛ржмрзЗ ржПржХржЯрж┐ ржЗржЙржЬрж╛рж░ ржЖржЗржбрж┐ ржмрж╛ ржорзЗржирж╢ржи ржжрж┐ржиред", threadID, messageID);

const userName = global.data.userName.get(targetID) || await Users.getNameUser(targetID);

const alreadyBanned = global.data.userBanned.get(targetID); const commandBannedList = global.data.commandBanned.get(targetID) || [];

switch (subCmd) { case "ban": case "-b": { if (alreadyBanned) return api.sendMessage(ЁЯЪл ржЗржЙржЬрж╛рж░ ржЖржЧрзЗ ржерзЗржХрзЗржЗ ржмрзНржпрж╛ржи ржХрж░рж╛ ржЖржЫрзЗред\nржХрж╛рж░ржг: ${alreadyBanned.reason || 'ржирзЗржЗ'}\nрж╕ржорзЯ: ${alreadyBanned.dateAdded || 'ржЕржЬрж╛ржирж╛'}, threadID, messageID); const time = new Date().toLocaleString("bn-BD", { timeZone: "Asia/Dhaka" }); await Users.setData(targetID, { data: { banned: true, reason, dateAdded: time } }); global.data.userBanned.set(targetID, { reason, dateAdded: time }); return api.sendMessage(тЬЕ ржмрзНржпрж╛ржи рж╕ржлрж▓: ${userName} (${targetID}), threadID, messageID); }

case "unban":
case "-ub": {
  if (!alreadyBanned) return api.sendMessage("тЭМ ржЗржЙржЬрж╛рж░ ржмрзНржпрж╛ржирзЗ ржЫрж┐рж▓ ржирж╛ред", threadID, messageID);
  await Users.setData(targetID, { data: { banned: false, reason: null, dateAdded: null } });
  global.data.userBanned.delete(targetID);
  return api.sendMessage(`тЬЕ ржЖржиржмрзНржпрж╛ржи рж╕ржлрж▓: ${userName} (${targetID})`, threadID, messageID);
}

case "banCommand":
case "-bc": {
  if (!reason) return api.sendMessage("тЪая╕П ржХрзЛржи ржХрзЛржи ржХржорж╛ржирзНржб ржмрзНржпрж╛ржи ржХрж░ржмрзЗржи рждрж╛ ржжрж┐ржиред (ржпрзЗржоржи: refine anime help)", threadID, messageID);
  const cmds = reason === "all" ? Array.from(global.client.commands.keys()) : reason.split(" ");
  const updated = Array.from(new Set([...commandBannedList, ...cmds]));
  await Users.setData(targetID, { data: { commandBanned: updated } });
  global.data.commandBanned.set(targetID, updated);
  return api.sendMessage(`ЁЯЪл ${cmds.length} ржЯрж┐ ржХржорж╛ржирзНржб ржмрзНржпрж╛ржи ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗ ${userName} (${targetID}) ржПрж░ ржЬржирзНржпред`, threadID, messageID);
}

case "unbanCommand":
case "-ubc": {
  if (commandBannedList.length === 0) return api.sendMessage("тЪая╕П ржПржЗ ржЗржЙржЬрж╛рж░рзЗрж░ ржЬржирзНржп ржХрзЛржирзЛ ржХржорж╛ржирзНржб ржмрзНржпрж╛ржи ржХрж░рж╛ ржЫрж┐рж▓ ржирж╛ред", threadID, messageID);
  if (!reason) return api.sendMessage("тЪая╕П ржХрзЛржи ржХржорж╛ржирзНржб ржЖржиржмрзНржпрж╛ржи ржХрж░ржмрзЗржи рждрж╛ ржжрж┐ржиред", threadID, messageID);
  const cmds = reason === "all" ? commandBannedList : reason.split(" ");
  const updated = commandBannedList.filter(cmd => !cmds.includes(cmd));
  if (updated.length === 0) global.data.commandBanned.delete(targetID);
  else global.data.commandBanned.set(targetID, updated);
  await Users.setData(targetID, { data: { commandBanned: updated } });
  return api.sendMessage(`тЬЕ ржЖржиржмрзНржпрж╛ржи рж╕ржлрж▓: ${cmds.join(", ")} ржХржорж╛ржирзНржб ${userName} (${targetID}) ржПрж░ ржЬржирзНржпред`, threadID, messageID);
}

case "list":
case "-l": {
  let list = [];
  let i = 1;
  for (const [id, data] of global.data.userBanned.entries()) {
    const name = global.data.userName.get(id) || await Users.getNameUser(id);
    list.push(`${i++}. ${name} (${id}) - ржХрж╛рж░ржг: ${data.reason || 'ржирзЗржЗ'}`);
  }
  return api.sendMessage(`ЁЯУЛ ржмрзНржпрж╛ржиржХрзГржд ржЗржЙржЬрж╛рж░ (${list.length} ржЬржи):\n\n${list.join("\n")}`, threadID, messageID);
}

case "search":
case "-s": {
  const keyword = args.slice(1).join(" ");
  const allUsers = await Users.getAll(['userID', 'name']);
  const matched = allUsers.filter(u => u.name.toLowerCase().includes(keyword.toLowerCase()));
  if (!matched.length) return api.sendMessage("ЁЯФН ржХрзЛржирзЛ ржЗржЙржЬрж╛рж░ ржкрж╛ржУрзЯрж╛ ржпрж╛рзЯржирж┐ред", threadID, messageID);
  const result = matched.map((u, idx) => `${idx + 1}. ${u.name} (${u.userID})`).join("\n");
  return api.sendMessage(`ЁЯФО ржЗржЙржЬрж╛рж░ ржорж┐рж▓рзЗржЫрзЗ:\n${result}`, threadID, messageID);
}

case "info":
case "-i": {
  const banned = alreadyBanned ? `тЬЕ рж╣рзНржпрж╛ржБ (ржХрж╛рж░ржг: ${alreadyBanned.reason}, рж╕ржорзЯ: ${alreadyBanned.dateAdded})` : "тЭМ ржирж╛";
  const cmdBanned = commandBannedList.length ? `ЁЯЪл рж╣рзНржпрж╛ржБ (${commandBannedList.join(", ")})` : "тЭМ ржирж╛";
  return api.sendMessage(`тД╣я╕П ржЗржЙржЬрж╛рж░ рждржерзНржпржГ\nЁЯСд ржирж╛ржо: ${userName}\nЁЯЖФ ID: ${targetID}\nтЫФ ржмрзНржпрж╛ржи: ${banned}\nЁЯУЫ ржХржорж╛ржирзНржб ржмрзНржпрж╛ржи: ${cmdBanned}`, threadID, messageID);
}

default:
  return api.sendMessage("тЪая╕П ржЙржкржпрзБржХрзНржд рж╕рж╛ржм-ржХржорж╛ржирзНржб ржжрж┐ржи (ban, unban, banCommand, unbanCommand, info, list, search)", threadID, messageID);

} };

