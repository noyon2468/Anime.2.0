const moment = require("moment-timezone");

module.exports.config = {
  name: "autoban",
  version: "1.0.0",
  hasPermssion: 0,
  credits: "‡¶®‡ßÇ‡¶∞ ‡¶Æ‡ßã‡¶π‡¶æ‡¶Æ‡ßç‡¶Æ‡¶¶ ",
  description: "Detects and auto-bans users who try to use the bot as another bot or spam",
  commandCategory: "ADMINBOT",
  cooldowns: 0
};

module.exports.handleEvent = async ({ event, api, Users }) => {
  const { threadID, messageID, body, senderID } = event;
  const time = require("moment-timezone").tz("Asia/Dhaka").format("HH:mm:ss | DD-MM-YYYY");

  // ‡¶Ø‡¶¶‡¶ø senderID bot-‡¶è‡¶∞ owner ‡¶π‡ßü, ‡¶§‡¶æ‡¶π‡¶≤‡ßá skip ‡¶ï‡¶∞‡ßã
  if (senderID == api.getCurrentUserID()) return;

  let name = await Users.getNameUser(senderID);
  const warningMsg = `${name},\n\n‚ö†Ô∏è ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶è‡¶Æ‡¶® ‡¶è‡¶ï‡¶ü‡¶ø ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá‡¶õ‡ßã ‡¶Ø‡¶æ ‡¶∂‡ßÅ‡¶ß‡ßÅ‡¶Æ‡¶æ‡¶§‡ßç‡¶∞ ‡¶Æ‡ßÇ‡¶≤ ‡¶¨‡¶ü‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø‡•§\n‡¶è‡¶ü‡¶ø ‡¶∏‡ßç‡¶™‡ßç‡¶Ø‡¶æ‡¶Æ‡¶ø‡¶Ç/‡¶Ö‡¶®‡ßç‡¶Ø ‡¶¨‡¶ü ‡¶π‡¶ø‡¶∏‡¶æ‡¶¨‡ßá ‡¶ó‡¶£‡ßç‡¶Ø ‡¶π‡ßü‡ßá‡¶õ‡ßá ‡¶è‡¶¨‡¶Ç ‡¶§‡ßã‡¶Æ‡¶æ‡¶ï‡ßá ‡¶¨‡ßç‡¶≤‡¶ï/‡¶¨‡ßç‡¶Ø‡¶æ‡¶® ‡¶ï‡¶∞‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá!\n\nüïí ‡¶∏‡¶Æ‡ßü: ${time}\n\nüìå ‡¶¶‡ßü‡¶æ ‡¶ï‡¶∞‡ßá ‡¶è‡¶á ‡¶ß‡¶∞‡¶®‡ßá‡¶∞ ‡¶ï‡¶æ‡¶∞‡ßç‡¶Ø‡¶ï‡¶≤‡¶æ‡¶™ ‡¶•‡ßá‡¶ï‡ßá ‡¶¨‡¶ø‡¶∞‡¶§ ‡¶•‡¶æ‡¶ï‡ßã!`;

  const blacklistTriggers = [
    "otherbots", "ban otherbots", "avoid spam", "auto bot", "bot detected",
    "command not found", "preset is missing", "auto banned", "another bot"
  ];

  for (let trigger of blacklistTriggers) {
    if (body?.toLowerCase().includes(trigger)) {
      // ‡¶¨‡ßç‡¶Ø‡¶æ‡¶® ‡¶∏‡¶ø‡¶∏‡ßç‡¶ü‡ßá‡¶Æ‡ßá ‡¶Ø‡ßÅ‡¶ï‡ßç‡¶§ ‡¶ï‡¶∞‡¶æ
      const userData = Users.getData(senderID)?.data || {};
      userData.banned = true;
      userData.reason = trigger;
      userData.dateAdded = time;
      global.data.userBanned.set(senderID, {
        reason: trigger,
        dateAdded: time
      });

      await Users.setData(senderID, { data: userData });

      api.sendMessage({ body: warningMsg }, threadID, () => {
        // Broadcast to all threads about the ban
        for (const tid of global.data.allThreadID) {
          api.sendMessage(
            `üì¢ ‡¶∏‡¶§‡¶∞‡ßç‡¶ï‡¶§‡¶æ!\n\n‚ùå ${name} (${senderID}) ‡¶ï‡ßá ‡¶¨‡¶ü ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶π‡¶ø‡¶∏‡ßá‡¶¨‡ßá ‡¶∂‡¶®‡¶æ‡¶ï‡ßç‡¶§ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá ‡¶è‡¶¨‡¶Ç ‡¶¨‡ßç‡¶Ø‡¶æ‡¶® ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá!\n\nüëâ ‡¶ï‡¶æ‡¶∞‡¶£: ${trigger}`,
            tid
          );
        }
      }, messageID);
      break;
    }
  }
};

// Command call ‡¶è‡¶∞ ‡¶∏‡¶Æ‡ßü help/info ‡¶¶‡ßá‡ßü
module.exports.run = async ({ event, api }) => {
  return api.sendMessage(
    `üìå ‡¶è‡¶á ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶°‡¶ü‡¶ø ‡¶®‡¶ø‡¶ú‡ßá ‡¶®‡¶ø‡¶ú‡ßá ‡¶ö‡¶≤‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶§‡ßà‡¶∞‡¶ø, ‡¶Ø‡¶æ‡¶§‡ßá ‡¶Ö‡¶®‡ßç‡¶Ø ‡¶¨‡¶ü ‡¶á‡¶â‡¶ú‡¶æ‡¶∞‡¶¶‡ßá‡¶∞ ‡¶Ö‡¶ü‡ßã ‡¶¨‡ßç‡¶Ø‡¶æ‡¶® ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡ßü‡•§`,
    event.threadID
  );
};
