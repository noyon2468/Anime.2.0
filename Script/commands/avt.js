module.exports.config = {
  name: "avt",
  version: "1.0.1",
  hasPermssion: 0,
  credits: "‡¶®‡ßÇ‡¶∞ ‡¶Æ‡ßã‡¶π‡¶æ‡¶Æ‡ßç‡¶Æ‡¶¶ + ChatGPT",
  description: "‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶ï‡¶æ‡¶∞‡ßÄ‡¶∞ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶≠‡¶æ‡¶ü‡¶æ‡¶∞ ‡¶¨‡¶æ ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™‡ßá‡¶∞ ‡¶õ‡¶¨‡¶ø ‡¶¶‡ßá‡¶ñ‡¶æ‡¶ì",
  commandCategory: "tools",
  cooldowns: 3
};

const fs = require("fs");
const request = require("request");
const axios = require("axios");
const tool = require("fb-tools");

module.exports.run = async function({ api, event, args, Threads }) {
  const threadSetting = (await Threads.getData(String(event.threadID))).data || {};
  const prefix = threadSetting.hasOwnProperty("PREFIX") ? threadSetting.PREFIX : global.config.PREFIX;
  const cmd = this.config.name;

  if (!args[0]) {
    return api.sendMessage(
      `[üñºÔ∏è] ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶≠‡¶æ‡¶ü‡¶æ‡¶∞ ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶°‡ßá‡¶∞ ‡¶®‡¶ø‡¶∞‡ßç‡¶¶‡ßá‡¶∂‡¶®‡¶æ:\n\n` +
      `üìå ${prefix}${cmd} box ‚Äî ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™‡ßá‡¶∞ ‡¶ï‡¶≠‡¶æ‡¶∞ ‡¶õ‡¶¨‡¶ø ‡¶¶‡ßá‡¶ñ‡¶æ‡¶¨‡ßá\n` +
      `üìå ${prefix}${cmd} id [UID] ‚Äî ‡¶®‡¶ø‡¶∞‡ßç‡¶¶‡¶ø‡¶∑‡ßç‡¶ü UID ‡¶è‡¶∞ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶≠‡¶æ‡¶ü‡¶æ‡¶∞\n` +
      `üìå ${prefix}${cmd} link [FB ‡¶≤‡¶ø‡¶Ç‡¶ï] ‚Äî ‡¶≤‡¶ø‡¶Ç‡¶ï ‡¶•‡ßá‡¶ï‡ßá UID ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡ßá ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶≠‡¶æ‡¶ü‡¶æ‡¶∞\n` +
      `üìå ${prefix}${cmd} user ‚Äî ‡¶®‡¶ø‡¶ú‡ßá‡¶∞ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶≠‡¶æ‡¶ü‡¶æ‡¶∞\n` +
      `üìå ${prefix}${cmd} user [@mention] ‚Äî ‡¶ü‡ßç‡¶Ø‡¶æ‡¶ó‡¶ï‡ßÉ‡¶§ ‡¶¨‡ßç‡¶Ø‡¶ï‡ßç‡¶§‡¶ø‡¶∞ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶≠‡¶æ‡¶ü‡¶æ‡¶∞`,
      event.threadID, event.messageID
    );
  }

  // üì∑ Box avatar
  if (args[0] == "box") {
    const targetID = args[1] || event.threadID;
    const threadInfo = await api.getThreadInfo(targetID);
    if (!threadInfo.imageSrc)
      return api.sendMessage(`üìÅ ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™ "${threadInfo.threadName}" ‡¶è‡¶∞ ‡¶ï‡ßã‡¶®‡ßã ‡¶ï‡¶≠‡¶æ‡¶∞ ‡¶õ‡¶¨‡¶ø ‡¶®‡ßá‡¶á‡•§`, event.threadID, event.messageID);

    const callback = () =>
      api.sendMessage({
        body: `üì∑ ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™ "${threadInfo.threadName}" ‡¶è‡¶∞ ‡¶ï‡¶≠‡¶æ‡¶∞ ‡¶õ‡¶¨‡¶ø`,
        attachment: fs.createReadStream(__dirname + "/cache/avt.png")
      }, event.threadID, () => fs.unlinkSync(__dirname + "/cache/avt.png"), event.messageID);

    return request(encodeURI(threadInfo.imageSrc))
      .pipe(fs.createWriteStream(__dirname + "/cache/avt.png"))
      .on("close", callback);
  }

  // üë§ Avatar by UID
  if (args[0] == "id") {
    const uid = args[1];
    if (!uid) return api.sendMessage(`‚ö†Ô∏è ‡¶¶‡ßü‡¶æ ‡¶ï‡¶∞‡ßá ‡¶è‡¶ï‡¶ü‡¶ø UID ‡¶¶‡¶ø‡¶®‡•§`, event.threadID, event.messageID);

    const callback = () =>
      api.sendMessage({ attachment: fs.createReadStream(__dirname + "/cache/avt.png") },
        event.threadID, () => fs.unlinkSync(__dirname + "/cache/avt.png"), event.messageID);

    return request(`https://graph.facebook.com/${uid}/picture?height=720&width=720&access_token=6628568379|c1e620fa708a1d5696fb991c1bde5662`)
      .pipe(fs.createWriteStream(__dirname + "/cache/avt.png"))
      .on("close", callback);
  }

  // üîó Avatar by FB Link
  if (args[0] == "link") {
    const link = args[1];
    if (!link) return api.sendMessage(`‚ö†Ô∏è ‡¶¶‡ßü‡¶æ ‡¶ï‡¶∞‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶´‡ßá‡¶∏‡¶¨‡ßÅ‡¶ï ‡¶≤‡¶ø‡¶Ç‡¶ï ‡¶¶‡¶ø‡¶®‡•§`, event.threadID, event.messageID);

    try {
      const id = await tool.findUid(link);
      const callback = () =>
        api.sendMessage({ attachment: fs.createReadStream(__dirname + "/cache/avt.png") },
          event.threadID, () => fs.unlinkSync(__dirname + "/cache/avt.png"), event.messageID);

      return request(`https://graph.facebook.com/${id}/picture?height=720&width=720&access_token=6628568379|c1e620fa708a1d5696fb991c1bde5662`)
        .pipe(fs.createWriteStream(__dirname + "/cache/avt.png"))
        .on("close", callback);
    } catch (e) {
      return api.sendMessage(`‚ùå ‡¶≤‡¶ø‡¶Ç‡¶ï‡ßá‡¶∞ UID ‡¶ñ‡ßÅ‡¶Å‡¶ú‡ßá ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø‡•§`, event.threadID, event.messageID);
    }
  }

  // üë• Avatar of user/self/mentions
  if (args[0] == "user") {
    let uid = event.senderID;

    // ‡¶Ø‡¶¶‡¶ø ‡¶ï‡ßá‡¶â ‡¶ü‡ßç‡¶Ø‡¶æ‡¶ó ‡¶ï‡¶∞‡ßá
    if (Object.keys(event.mentions).length > 0) {
      uid = Object.keys(event.mentions)[0];
    }

    const callback = () =>
      api.sendMessage({ attachment: fs.createReadStream(__dirname + "/cache/avt.png") },
        event.threadID, () => fs.unlinkSync(__dirname + "/cache/avt.png"), event.messageID);

    return request(`https://graph.facebook.com/${uid}/picture?height=720&width=720&access_token=6628568379|c1e620fa708a1d5696fb991c1bde5662`)
      .pipe(fs.createWriteStream(__dirname + "/cache/avt.png"))
      .on("close", callback);
  }

  // ‚ùì Default fallback
  return api.sendMessage(`‚ùì ‡¶≠‡ßÅ‡¶≤ ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶°! ${prefix}${cmd} ‡¶≤‡¶ø‡¶ñ‡ßá ‡¶®‡¶ø‡¶∞‡ßç‡¶¶‡ßá‡¶∂‡¶®‡¶æ ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶®‡•§`, event.threadID, event.messageID);
};
