module.exports.config = {
  name: "antijoin",
  version: "2.0.0",
  credits: "ржирзВрж░ ржорзЛрж╣рж╛ржорзНржоржж",
  hasPermssion: 1,
  description: "ржирждрзБржи рж╕ржжрж╕рзНржпржжрзЗрж░ ржпрзЛржЧржжрж╛ржи ржмржирзНржз/ржЪрж╛рж▓рзБ ржХрж░рзБржи (Owner only)",
  usages: "antijoin on/off",
  commandCategory: "group",
  cooldowns: 0
};

module.exports.run = async ({ api, event, Threads }) => {
  const threadID = event.threadID;
  const messageID = event.messageID;

  // тЬЕ рж╢рзБржзрзБ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ UID ржЪрж╛рж▓рж╛рждрзЗ ржкрж╛рж░ржмрзЗ
  const ownerUID = "100035389598342";
  if (event.senderID !== ownerUID) {
    return api.sendMessage(
      "тЭМ ржПржЗ ржХржорж╛ржирзНржбржЯрж┐ ржХрзЗржмрж▓ржорж╛рждрзНрж░ ржирзВрж░ ржорзЛрж╣рж╛ржорзНржоржж ржЪрж╛рж▓рж╛рждрзЗ ржкрж╛рж░рзЗржи!",
      threadID, messageID
    );
  }

  // ржмржЯ ржЕрзНржпрж╛ржбржорж┐ржи ржХрж┐ржирж╛ ржЪрзЗржХ
  const info = await api.getThreadInfo(threadID);
  if (!info.adminIDs.some(admin => admin.id == api.getCurrentUserID())) {
    return api.sendMessage(
      "тЪая╕П ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржмржЯржХрзЗ ржЧрзНрж░рзБржк ржЕрзНржпрж╛ржбржорж┐ржи ржХрж░рзБржи, рждрж╛рж░ржкрж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред",
      threadID, messageID
    );
  }

  const threadData = (await Threads.getData(threadID)).data || {};
  threadData.newMember = !threadData.newMember;

  await Threads.setData(threadID, { data: threadData });
  global.data.threadData.set(parseInt(threadID), threadData);

  return api.sendMessage(
    `ЁЯЫбя╕П Anti-Join рж╕рж┐рж╕рзНржЯрзЗржо ${threadData.newMember ? "тЬЕ ржЪрж╛рж▓рзБ" : "тЭМ ржмржирзНржз"} ржХрж░рж╛ рж╣рж▓рзЛ!`,
    threadID, messageID
  );
};
