const axios = require("axios");
const fs = require("fs-extra");

module.exports.config = {
  name: "refine",
  version: "3.0.0",
  hasPermssion: 0,
  credits: "‡¶®‡ßÇ‡¶∞ ‡¶Æ‡ßã‡¶π‡¶æ‡¶Æ‡ßç‡¶Æ‡¶¶",
  description: "AI ‡¶¶‡¶ø‡ßü‡ßá ‡¶õ‡¶¨‡¶ø ‡¶∞‡¶ø‡¶´‡¶æ‡¶á‡¶®, ‡¶ï‡¶æ‡¶∞‡ßç‡¶ü‡ßÅ‡¶®, HD, ‡¶∏‡ßç‡¶Æ‡ßÅ‡¶•, ‡¶∞‡¶ø‡¶Æ‡ßÅ‡¶≠ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ï‡¶ó‡ßç‡¶∞‡¶æ‡¶â‡¶®‡ßç‡¶° ‡¶á‡¶§‡ßç‡¶Ø‡¶æ‡¶¶‡¶ø",
  commandCategory: "image edit",
  usages: "reply image + refine [bg/cartoon/hd/blur/sketch/enhance/remix/all]",
  cooldowns: 3,
};

module.exports.run = async function ({ api, event, args }) {
  let type = args[0]?.toLowerCase() || "enhance";
  const supported = ["bg", "cartoon", "hd", "blur", "sketch", "enhance", "remix", "all"];

  if (!supported.includes(type)) {
    return api.sendMessage(
      `‚ùå ‡¶Ö‡¶™‡¶∂‡¶®‡¶ü‡¶ø ‡¶∏‡¶†‡¶ø‡¶ï ‡¶®‡ßü!\n\nüìå refine ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶°‡ßá‡¶∞ ‡¶Ö‡¶™‡¶∂‡¶®:\n/refine bg\n/refine cartoon\n/refine hd\n/refine blur\n/refine sketch\n/refine enhance\n/refine remix\n/refine all`,
      event.threadID,
      event.messageID
    );
  }

  let imageUrl = null;

  if (event.type === "message_reply" && event.messageReply.attachments.length > 0) {
    imageUrl = event.messageReply.attachments[0].url;
  } else if (event.attachments.length > 0) {
    imageUrl = event.attachments[0].url;
  }

  if (!imageUrl) {
    return api.sendMessage("‚ùå ‡¶è‡¶ï‡¶ü‡¶ø ‡¶õ‡¶¨‡¶ø‡¶§‡ßá reply ‡¶¶‡¶ø‡¶® ‡¶¨‡¶æ ‡¶∏‡¶∞‡¶æ‡¶∏‡¶∞‡¶ø ‡¶õ‡¶¨‡¶ø ‡¶™‡¶æ‡¶†‡¶ø‡ßü‡ßá /refine [type] ‡¶¶‡¶ø‡¶®‡•§", event.threadID, event.messageID);
  }

  const apis = {
    bg: "https://api.remove.bg/remove?url=",
    cartoon: "https://api.zxcl.workers.dev/cartoon?url=",
    hd: "https://api.zxcl.workers.dev/upscale?url=",
    blur: "https://api.zxcl.workers.dev/blur?url=",
    sketch: "https://api.zxcl.workers.dev/sketch?url=",
    enhance: "https://api.zxcl.workers.dev/enhance?url=",
    remix: "https://api.zxcl.workers.dev/remix?url="
  };

  const showName = {
    bg: "üéØ Background Removed",
    cartoon: "üé® Cartoon Version",
    hd: "üì∏ HD/4K Upscaled",
    blur: "üå´Ô∏è Blur Effect",
    sketch: "‚úèÔ∏è Sketch Style",
    enhance: "üíÜ‚Äç‚ôÇÔ∏è Enhanced Face",
    remix: "üåà AI Remix Style"
  };

  const doEdit = async (key) => {
    try {
      const res = await axios.get(`${apis[key]}${encodeURIComponent(imageUrl)}`, {
        responseType: "arraybuffer"
      });
      const filePath = `${__dirname}/cache/${key}_${event.senderID}.png`;
      fs.writeFileSync(filePath, Buffer.from(res.data, "binary"));
      await api.sendMessage({
        body: showName[key],
        attachment: fs.createReadStream(filePath)
      }, event.threadID, () => fs.unlinkSync(filePath));
    } catch (e) {
      await api.sendMessage(`‚ùå ${key.toUpperCase()} apply ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá!`, event.threadID);
    }
  };

  if (type === "all") {
    api.sendMessage("üõ†Ô∏è ‡¶∏‡¶¨ ‡¶è‡¶°‡¶ø‡¶ü ‡¶è‡¶ï‡ßá ‡¶è‡¶ï‡ßá ‡¶ï‡¶∞‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá, ‡¶Ö‡¶®‡ßÅ‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡ßá ‡¶Ö‡¶™‡ßá‡¶ï‡ßç‡¶∑‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®...", event.threadID, event.messageID);
    for (const key of Object.keys(apis)) {
      await doEdit(key);
    }
    return;
  }

  api.sendMessage(`‚ú® ${showName[type]} ‡¶§‡ßà‡¶∞‡¶ø ‡¶π‡¶ö‡ßç‡¶õ‡ßá...`, event.threadID, event.messageID);
  await doEdit(type);
};
