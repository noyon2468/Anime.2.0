module.exports.config = {
    name: "job",
    version: "1.0.2",
    hasPermssion: 0,
    credits: "CYBER BOT TEAM + ChatGPT (‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶∏‡¶Ç‡¶∏‡ßç‡¶ï‡¶∞‡¶£)",
    description: "‡¶ö‡¶æ‡¶ï‡¶∞‡¶ø‡¶∞ ‡¶Æ‡¶æ‡¶ß‡ßç‡¶Ø‡¶Æ‡ßá ‡¶ï‡ßü‡ßá‡¶® ‡¶á‡¶®‡¶ï‡¶æ‡¶Æ ‡¶ï‡¶∞‡ßã!",
    commandCategory: "Economy",
    cooldowns: 5,
    envConfig: {
        cooldownTime: 5000
    }
};

module.exports.languages = {
    "bn": {
        "cooldown": "‚è≥ ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶® %1 ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü %2 ‡¶∏‡ßá‡¶ï‡ßá‡¶®‡ßç‡¶° ‡¶™‡¶∞‡•§"
    }
};

module.exports.handleReply = async ({ event, api, handleReply, Currencies }) => {
    const { threadID, messageID, senderID } = event;
    let data = (await Currencies.getData(senderID)).data || {};

    const coins = {
        industry: Math.floor(Math.random() * 401) + 200,
        service: Math.floor(Math.random() * 801) + 200,
        oil: Math.floor(Math.random() * 401) + 200,
        mine: Math.floor(Math.random() * 601) + 200,
        stone: Math.floor(Math.random() * 201) + 200,
        cave: Math.floor(Math.random() * 801) + 200,
    };

    const jobs = {
        industry: ['‡¶ï‡¶∞‡ßç‡¶Æ‡¶ö‡¶æ‡¶∞‡ßÄ ‡¶®‡¶ø‡¶Ø‡ßÅ‡¶ï‡ßç‡¶§', '‡¶π‡ßã‡¶ü‡ßá‡¶≤ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶∏‡ßç‡¶•‡¶æ‡¶™‡¶ï', '‡¶¨‡¶ø‡¶¶‡ßç‡¶Ø‡ßÅ‡ßé ‡¶™‡ßç‡¶≤‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶ü‡ßá ‡¶ï‡¶æ‡¶ú', '‡¶∞‡ßá‡¶∏‡ßç‡¶ü‡ßÅ‡¶∞‡ßá‡¶®‡ßç‡¶ü ‡¶∂‡ßá‡¶´', '‡¶ï‡¶æ‡¶∞‡¶ñ‡¶æ‡¶®‡¶æ‡¶∞ ‡¶∂‡ßç‡¶∞‡¶Æ‡¶ø‡¶ï'],
        service: ['‡¶™‡ßç‡¶≤‡¶æ‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞', '‡¶è‡¶∏‡¶ø ‡¶∏‡¶æ‡¶∞‡¶æ‡¶á', '‡¶¨‡¶æ‡¶ú‡¶æ‡¶∞‡¶ú‡¶æ‡¶§‡¶ï‡¶∞‡¶£', '‡¶´‡ßç‡¶≤‡¶æ‡ßü‡¶æ‡¶∞ ‡¶¨‡¶ø‡¶§‡¶∞‡¶£', '‡¶∂‡¶ø‡¶™‡¶æ‡¶∞', '‡¶ï‡¶Æ‡ßç‡¶™‡¶ø‡¶â‡¶ü‡¶æ‡¶∞ ‡¶∏‡¶æ‡¶∞‡¶æ‡¶á', '‡¶ó‡¶æ‡¶á‡¶°', '‡¶¨‡ßá‡¶¨‡¶ø ‡¶ï‡ßá‡ßü‡¶æ‡¶∞'],
        oil: ['‡ßß‡ß© ‡¶¨‡ßç‡¶Ø‡¶æ‡¶∞‡ßá‡¶≤ ‡¶§‡ßá‡¶≤ ‡¶â‡¶§‡ßç‡¶§‡ßã‡¶≤‡¶®', '‡ßÆ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶∞‡ßá‡¶≤ ‡¶§‡ßá‡¶≤ ‡¶¨‡¶ø‡¶ï‡ßç‡¶∞‡¶ø', '‡¶§‡ßá‡¶≤ ‡¶ö‡ßÅ‡¶∞‡¶ø', '‡¶ú‡¶≤‡ßá ‡¶§‡ßá‡¶≤ ‡¶Æ‡¶ø‡¶∂‡¶ø‡ßü‡ßá ‡¶¨‡¶ø‡¶ï‡ßç‡¶∞‡¶ø'],
        mine: ['‡¶≤‡ßã‡¶π‡¶æ', '‡¶∏‡ßã‡¶®‡¶æ', '‡¶ï‡ßü‡¶≤‡¶æ', '‡¶∏‡ßÄ‡¶∏‡¶æ', '‡¶§‡¶æ‡¶Æ‡¶æ', '‡¶§‡ßá‡¶≤‡ßá‡¶∞ ‡¶ñ‡¶®‡¶ø'],
        stone: ['‡¶π‡ßÄ‡¶∞‡¶æ', '‡¶∏‡ßã‡¶®‡¶æ', '‡¶ï‡ßü‡¶≤‡¶æ', '‡¶™‡¶æ‡¶®‡ßç‡¶®‡¶æ', '‡¶≤‡ßã‡¶π‡¶æ', '‡¶™‡¶æ‡¶•‡¶∞', '‡¶∏‡¶æ‡¶¶‡¶æ‡¶Æ‡¶æ‡¶ü‡¶æ', '‡¶¨‡ßç‡¶≤‡ßÅ‡¶∏‡ßç‡¶ü‡ßã‡¶®'],
        cave: ['‡¶≠‡¶ø‡¶Ü‡¶á‡¶™‡¶ø ‡¶Ö‡¶§‡¶ø‡¶•‡¶ø', '‡¶™‡ßá‡¶ü‡ßá‡¶®‡ßç‡¶ü', '‡¶Ö‡¶ö‡ßá‡¶®‡¶æ ‡¶≤‡ßã‡¶ï', '‡ßØ‡ß® ‡¶¨‡¶õ‡¶∞ ‡¶¨‡ßü‡¶∏‡ßÄ ‡¶ß‡¶®‡ßÄ', '‡ßß‡ß® ‡¶¨‡¶õ‡¶∞‡ßá‡¶∞ ‡¶ó‡ßÅ‡¶ó‡¶≤‡¶ø ‡¶õ‡ßá‡¶≤‡ßá']
    };

    const choice = event.body.trim();
    let msg = "";

    switch (choice) {
        case "1":
            msg = `üè≠ ‡¶Ü‡¶™‡¶®‡¶ø ‡¶è‡¶ñ‡¶® "${jobs.industry[Math.floor(Math.random() * jobs.industry.length)]}" ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡ßá ‡¶Ü‡ßü ‡¶ï‡¶∞‡¶≤‡ßá‡¶® ${coins.industry}$`;
            Currencies.increaseMoney(senderID, coins.industry);
            break;
        case "2":
            msg = `üß∞ ‡¶Ü‡¶™‡¶®‡¶ø ‡¶è‡¶ñ‡¶® "${jobs.service[Math.floor(Math.random() * jobs.service.length)]}" ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡ßá ‡¶Ü‡ßü ‡¶ï‡¶∞‡¶≤‡ßá‡¶® ${coins.service}$`;
            Currencies.increaseMoney(senderID, coins.service);
            break;
        case "3":
            msg = `üõ¢Ô∏è ‡¶Ü‡¶™‡¶®‡¶ø "${jobs.oil[Math.floor(Math.random() * jobs.oil.length)]}" ‡¶ï‡¶∞‡ßá ‡¶™‡ßá‡¶≤‡ßá‡¶® ${coins.oil}$`;
            Currencies.increaseMoney(senderID, coins.oil);
            break;
        case "4":
            msg = `‚õèÔ∏è ‡¶Ü‡¶™‡¶®‡¶ø ‡¶ñ‡¶®‡¶ø ‡¶•‡ßá‡¶ï‡ßá "${jobs.mine[Math.floor(Math.random() * jobs.mine.length)]}" ‡¶§‡ßÅ‡¶≤‡ßá ‡¶™‡ßá‡¶≤‡ßá‡¶® ${coins.mine}$`;
            Currencies.increaseMoney(senderID, coins.mine);
            break;
        case "5":
            msg = `ü™® ‡¶Ü‡¶™‡¶®‡¶ø "${jobs.stone[Math.floor(Math.random() * jobs.stone.length)]}" ‡¶™‡¶æ‡¶•‡¶∞ ‡¶ñ‡¶®‡¶® ‡¶ï‡¶∞‡ßá ‡¶™‡ßá‡¶≤‡ßá‡¶® ${coins.stone}$`;
            Currencies.increaseMoney(senderID, coins.stone);
            break;
        case "6":
            msg = `üò≥ ‡¶Ü‡¶™‡¶®‡¶ø "${jobs.cave[Math.floor(Math.random() * jobs.cave.length)]}" ‡¶∏‡¶ø‡¶≤‡ßá‡¶ï‡ßç‡¶ü ‡¶ï‡¶∞‡ßá ‡¶™‡ßá‡¶≤‡ßá‡¶® ${coins.cave}$... ‡¶¨‡¶ø‡¶∏‡ßç‡¶§‡¶æ‡¶∞‡¶ø‡¶§ ‡¶ú‡¶æ‡¶®‡¶§‡ßá üò∂`;
            Currencies.increaseMoney(senderID, coins.cave);
            break;
        case "7":
            msg = "üîß ‡¶´‡¶ø‡¶ö‡¶æ‡¶∞‡¶ü‡¶ø ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶ï‡¶∞‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá...";
            break;
        default:
            return api.sendMessage("‚ùå ‡¶¶‡¶Ø‡¶º‡¶æ ‡¶ï‡¶∞‡ßá ‡ßß-‡ß≠ ‡¶™‡¶∞‡ßç‡¶Ø‡¶®‡ßç‡¶§ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®‡•§", threadID, messageID);
    }

    api.unsendMessage(handleReply.messageID);
    data.work2Time = Date.now();
    await Currencies.setData(senderID, { data });

    return api.sendMessage(msg, threadID, messageID);
};

module.exports.run = async ({ event, api, Currencies }) => {
    const { threadID, messageID, senderID } = event;
    const cooldown = global.configModule[this.config.name].cooldownTime;
    let data = (await Currencies.getData(senderID)).data || {};

    if (data.work2Time && cooldown - (Date.now() - data.work2Time) > 0) {
        var timeLeft = cooldown - (Date.now() - data.work2Time);
        var minutes = Math.floor(timeLeft / 60000);
        var seconds = ((timeLeft % 60000) / 1000).toFixed(0);
        return api.sendMessage(`‚è≥ ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶® ${minutes} ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü ${seconds < 10 ? "0" + seconds : seconds} ‡¶∏‡ßá‡¶ï‡ßá‡¶®‡ßç‡¶° ‡¶™‡¶∞‡•§`, threadID, messageID);
    }

    return api.sendMessage(
        `üçÄ ‡¶Ü‡¶ú‡¶ï‡ßá‡¶∞ ‡¶ï‡¶æ‡¶ú‡ßá‡¶∞ ‡¶§‡¶æ‡¶≤‡¶ø‡¶ï‡¶æ:\n\n` +
        `1. üè≠ ‡¶á‡¶®‡ßç‡¶°‡¶æ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø ‡¶ú‡ßã‡¶®\n` +
        `2. üß∞ ‡¶∏‡¶æ‡¶∞‡ßç‡¶≠‡¶ø‡¶∏ ‡¶∏‡ßá‡¶ï‡ßç‡¶ü‡¶∞\n` +
        `3. üõ¢Ô∏è ‡¶§‡ßá‡¶≤‡ßá‡¶∞ ‡¶ñ‡¶®‡¶ø\n` +
        `4. ‚õèÔ∏è ‡¶ñ‡¶®‡¶ø‡¶ú ‡¶ñ‡¶®‡¶ø\n` +
        `5. ü™® ‡¶™‡¶æ‡¶•‡¶∞ ‡¶ñ‡¶®‡¶®\n` +
        `6. ü´£ ‡¶∞‡¶π‡¶∏‡ßç‡¶Ø‡¶Æ‡¶Ø‡¶º ‡¶Ö‡¶™‡¶∂‡¶®\n` +
        `7. üîß ‡¶Ü‡¶∏‡¶õ‡ßá...\n\n` +
        `‚úÖ ‡¶è‡¶ï‡¶ü‡¶ø ‡¶Ö‡¶™‡¶∂‡¶® ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞ ‡¶∞‡¶ø‡¶™‡ßç‡¶≤‡¶æ‡¶á ‡¶ï‡¶∞‡ßÅ‡¶® (‡ßß-‡ß≠)`, threadID,
        (err, info) => {
            global.client.handleReply.push({
                type: "choosee",
                name: this.config.name,
                author: senderID,
                messageID: info.messageID
            });
        }
    );
};
