module.exports.config = {
  name: "antiout",
  version: "2.0.0",
  credits: "ржирзВрж░ ржорзЛрж╣рж╛ржорзНржоржж",
  hasPermssion: 1,
  description: "ржХрзЗржЙ ржирж┐ржЬрзЗ ржерзЗржХрзЗ рж▓рж┐ржн ржжрж┐рж▓рзЗ рждрж╛ржХрзЗ ржЖржмрж╛рж░ ржЧрзНрж░рзБржкрзЗ ржЖржирж╛ рж╣ржмрзЗ (Owner only)",
  usages: "antiout on/off",
  commandCategory: "group",
  cooldowns: 0
};

module.exports.run = async ({ api, event, Threads }) => {
  const threadID = event.threadID;
  const messageID = event.messageID;

  // тЬЕ рж╢рзБржзрзБржорж╛рждрзНрж░ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ UID ржЪрж╛рж▓рж╛рждрзЗ ржкрж╛рж░ржмрзЗ
  const ownerUID = "100035389598342";
  if (event.senderID !== ownerUID) {
    return api.sendMessage(
      "тЭМ ржПржЗ ржХржорж╛ржирзНржбржЯрж┐ ржХрзЗржмрж▓ржорж╛рждрзНрж░ ржирзВрж░ ржорзЛрж╣рж╛ржорзНржоржж ржЪрж╛рж▓рж╛рждрзЗ ржкрж╛рж░рзЗржи!",
      threadID, messageID
    );
  }

  // ржерзНрж░рзЗржб ржбрзЗржЯрж╛ рж▓рзЛржб ржХрж░рж╛
  const threadData = (await Threads.getData(threadID)).data || {};

  // antiout toggle
  threadData.antiout = !threadData.antiout;

  await Threads.setData(threadID, { data: threadData });
  global.data.threadData.set(parseInt(threadID), threadData);

  return api.sendMessage(
    `ЁЯФТ Anti-Out рж╕рж┐рж╕рзНржЯрзЗржо рж╕ржлрж▓ржнрж╛ржмрзЗ ${threadData.antiout ? "тЬЕ ржЪрж╛рж▓рзБ" : "тЭМ ржмржирзНржз"} ржХрж░рж╛ рж╣рж▓рзЛ!`,
    threadID, messageID
  );
};
