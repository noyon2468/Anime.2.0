const fs = require("fs-extra");
const path = require("path");

module.exports.config = {
  name: "autosetname",
  version: "1.0.1",
  hasPermssion: 0,
  credits: "‡¶®‡ßÇ‡¶∞ ‡¶Æ‡ßã‡¶π‡¶æ‡¶Æ‡ßç‡¶Æ‡¶¶",
  description: "Automatically set nicknames for new members",
  commandCategory: "Box Chat",
  usages: "[add <name> / remove]",
  cooldowns: 5
};

const dataPath = path.join(__dirname, "cache", "autosetname.json");

module.exports.onLoad = () => {
  if (!fs.existsSync(dataPath)) fs.writeFileSync(dataPath, "[]", "utf-8");
};

module.exports.run = async function({ event, api, args, Users }) {
  const { threadID, messageID, senderID } = event;
  if (!args[0]) {
    return api.sendMessage(
      "üìå ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡ßá‡¶∞ ‡¶®‡¶ø‡ßü‡¶Æ:\n‚û§ autosetname add <‡¶®‡¶æ‡¶Æ>\n‚û§ autosetname remove",
      threadID,
      messageID
    );
  }

  let data = JSON.parse(fs.readFileSync(dataPath, "utf-8"));
  let threadData = data.find(item => item.threadID == threadID);

  if (!threadData) {
    threadData = { threadID, nameUser: [] };
    data.push(threadData);
  }

  const name = (await Users.getData(senderID)).name;
  const content = args.slice(1).join(" ");

  switch (args[0]) {
    case "add":
      if (!content) return api.sendMessage("‚ùå ‡¶®‡¶§‡ßÅ‡¶® ‡¶∏‡¶¶‡¶∏‡ßç‡¶Ø‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶´‡¶æ‡¶Å‡¶ï‡¶æ ‡¶∞‡¶æ‡¶ñ‡¶æ ‡¶Ø‡¶æ‡¶¨‡ßá ‡¶®‡¶æ!", threadID, messageID);
      if (threadData.nameUser.length > 0) return api.sendMessage("‚ö†Ô∏è ‡¶Ü‡¶ó‡ßá ‡¶•‡ßá‡¶ï‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶®‡¶æ‡¶Æ ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡¶æ ‡¶Ü‡¶õ‡ßá‡•§ ‡¶®‡¶§‡ßÅ‡¶® ‡¶®‡¶æ‡¶Æ ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡¶§‡ßá ‡¶π‡¶≤‡ßá ‡¶Ü‡¶ó‡ßá‡¶∞‡¶ü‡¶ø ‡¶Æ‡ßÅ‡¶õ‡ßÅ‡¶®!", threadID, messageID);
      threadData.nameUser.push(content);
      fs.writeFileSync(dataPath, JSON.stringify(data, null, 2), "utf-8");
      return api.sendMessage(`‚úÖ ‡¶®‡¶§‡ßÅ‡¶® ‡¶∏‡¶¶‡¶∏‡ßç‡¶Ø‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶ï‡¶®‡¶´‡¶ø‡¶ó‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá!\n‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£: ${content} ${name}`, threadID, messageID);

    case "rm":
    case "remove":
    case "delete":
      if (threadData.nameUser.length === 0) return api.sendMessage("‚ÑπÔ∏è ‡¶ï‡ßã‡¶®‡ßã ‡¶®‡¶æ‡¶Æ ‡¶ï‡¶®‡¶´‡¶ø‡¶ó‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡¶®‡¶ø!", threadID, messageID);
      threadData.nameUser = [];
      fs.writeFileSync(dataPath, JSON.stringify(data, null, 2), "utf-8");
      return api.sendMessage("‚úÖ ‡¶®‡¶§‡ßÅ‡¶® ‡¶∏‡¶¶‡¶∏‡ßç‡¶Ø‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶ï‡¶®‡¶´‡¶ø‡¶ó‡¶æ‡¶∞‡ßá‡¶∂‡¶® ‡¶Æ‡ßÅ‡¶õ‡ßá ‡¶´‡ßá‡¶≤‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§", threadID, messageID);

    default:
      return api.sendMessage("‚ùå ‡¶∏‡¶†‡¶ø‡¶ï ‡¶´‡¶∞‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ü ‡¶¶‡¶ø‡¶®‡•§\n‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®: autosetname add/remove", threadID, messageID);
  }
};
