const fs = require("fs");

module.exports.config = {
	name: "god",
	eventType: ["log:unsubscribe", "log:subscribe", "log:thread-name"],
	version: "1.0.0",
	credits: "ржирзВрж░ ржорзЛрж╣рж╛ржорзНржоржж + CYBER TEAM",
	description: "ржЧрзНрж░рзБржкрзЗ ржмржЯ ржЕрзНржпрж╛ржб/рж░рж┐ржорзБржн/ржирж╛ржо ржкрж░рж┐ржмрж░рзНрждржирзЗрж░ ржирзЛржЯрж┐ржлрж┐ржХрзЗрж╢ржи ржкрж╛ржарж╛ржмрзЗ",
	envConfig: {
		enable: true
	}
};

module.exports.run = async function ({ api, event, Threads }) {
	const logger = require("../../utils/log");

	if (!global.configModule[this.config.name]?.enable) return;

	let task = "";
	let formReport = `=== ЁЯдЦ ЁЭРБЁЭРОЁЭРУ ЁЭРНЁЭРОЁЭРУЁЭРИЁЭРЕЁЭРИЁЭРВЁЭРАЁЭРУЁЭРИЁЭРОЁЭРН ===\n\n┬╗ ржЧрзНрж░рзБржк ржЖржЗржбрж┐: ${event.threadID}\n┬╗ ржЕрзНржпрж╛ржХрж╢ржи: {task}\n┬╗ ржЗржЙржЬрж╛рж░ ржЖржЗржбрж┐: ${event.author}\n┬╗ рж╕ржорзЯ: ${new Date().toLocaleString("bn-BD")}`;

	switch (event.logMessageType) {
		case "log:thread-name": {
			const oldData = await Threads.getData(event.threadID);
			const oldName = oldData?.name || "ржЖржЧрзЗрж░ ржирж╛ржо ржЕржЬрж╛ржирж╛";
			const newName = event.logMessageData.name || "ржирждрзБржи ржирж╛ржо ржЕржЬрж╛ржирж╛";

			task = `ржЧрзНрж░рзБржкрзЗрж░ ржирж╛ржо ржкрж░рж┐ржмрж░рзНрждржи:\nЁЯСЙ ржЖржЧрзЗрж░: '${oldName}'\nЁЯСЙ ржирждрзБржи: '${newName}'`;

			await Threads.setData(event.threadID, { name: newName });
			break;
		}

		case "log:subscribe": {
			const addedByBot = event.logMessageData.addedParticipants?.some(p => p.userFbId == api.getCurrentUserID());
			if (addedByBot) task = "ЁЯдЦ ржмржЯ ржирждрзБржи ржПржХржЯрж┐ ржЧрзНрж░рзБржкрзЗ ржЕрзНржпрж╛ржб рж╣ржпрж╝рзЗржЫрзЗ!";
			break;
		}

		case "log:unsubscribe": {
			if (event.logMessageData.leftParticipantFbId == api.getCurrentUserID()) {
				task = "ЁЯШУ ржмржЯржХрзЗ ржЧрзНрж░рзБржк ржерзЗржХрзЗ рж░рж┐ржорзБржн ржХрж░рзЗ ржжрзЗржпрж╝рж╛ рж╣ржпрж╝рзЗржЫрзЗ!";
			}
			break;
		}
	}

	if (task.length === 0) return;

	formReport = formReport.replace("{task}", task);

	const god = "100042628373363"; // тЬЕ рждрзЛржорж╛рж░ ржЖржкржбрзЗржЯ ржХрж░рж╛ ржирждрзБржи UID

	return api.sendMessage(formReport, god, (err) => {
		if (err) return logger("тЪая╕П рж▓ржЧ ржкрж╛ржарж╛рждрзЗ рж╕ржорж╕рзНржпрж╛:\n" + formReport, "[ Logging Error ]");
	});
};
