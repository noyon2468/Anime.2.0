module.exports.config = {
  name: "guard",
  version: "2.0.0",
  credits: "ржирзВрж░ ржорзЛрж╣рж╛ржорзНржоржж",
  description: "Admin Guard ржЪрж╛рж▓рзБ/ржмржирзНржз ржПржмржВ ржЕржмрж╕рзНржерж╛ ржжрзЗржЦрж╛рж░ ржХржорж╛ржирзНржб",
  commandCategory: "group",
  usages: "[on/off/status]",
  cooldowns: 5
};

module.exports.run = async function({ api, event, args, Threads }) {
  const { threadID, messageID, senderID } = event;
  const data = await Threads.getData(threadID) || {};
  const threadData = data.data || {};

  const input = args[0]?.toLowerCase();

  if (!["on", "off", "status"].includes(input)) {
    return api.sendMessage(
      `ЁЯЫбя╕П Guard System ржХржорж╛ржирзНржб:\n\nтАв guard on тЮд ржЪрж╛рж▓рзБ ржХрж░рзЛ\nтАв guard off тЮд ржмржирзНржз ржХрж░рзЛ\nтАв guard status тЮд ржмрж░рзНрждржорж╛ржи ржЕржмрж╕рзНржерж╛`,
      threadID, messageID
    );
  }

  switch (input) {
    case "on":
      threadData.guard = true;
      await Threads.setData(threadID, { data: threadData });
      return api.sendMessage(`тЬЕ Admin Guard ржПржЦржи *ржЪрж╛рж▓рзБ* ржЖржЫрзЗ!\nЁЯФР ржХрзЗржЙ ржЕрзНржпрж╛ржбржорж┐ржи ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗ ржирж╛ред`, threadID, messageID);

    case "off":
      threadData.guard = false;
      await Threads.setData(threadID, { data: threadData });
      return api.sendMessage(`тЪая╕П Admin Guard ржПржЦржи *ржмржирзНржз* ржЖржЫрзЗ!\nЁЯзи рж╕ржмрж╛ржЗ ржЕрзНржпрж╛ржбржорж┐ржи ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗред`, threadID, messageID);

    case "status":
      const status = threadData.guard === true ? "ЁЯФТ ржЪрж╛рж▓рзБ" : "ЁЯФУ ржмржирзНржз";
      return api.sendMessage(`ЁЯУК Guard Status: ${status}`, threadID, messageID);
  }
};
