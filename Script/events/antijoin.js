module.exports.config = {
  name: "antijoin",
  eventType: ["log:subscribe"],
  version: "1.1.0",
  credits: "ржирзВрж░ ржорзЛрж╣рж╛ржорзНржоржж",
  description: "ржЧрзНрж░рзБржкрзЗ ржирждрзБржи ржХрзЗржЙ ржПрж▓рзЗ Auto Remove ржХрж░рзЗ ржжрзЗрзЯ ржпржжрж┐ Anti-Join ржорзЛржб ржЪрж╛рж▓рзБ ржерж╛ржХрзЗ"
};

module.exports.run = async function ({ event, api, Threads, Users }) {
  const { threadID, logMessageData } = event;
  const threadData = await Threads.getData(threadID);
  const data = threadData.data || {};

  if (data.newMember !== true) return;

  // ржпржжрж┐ ржХрзЗржЙ ржПржХрж╛ржзрж┐ржХ ржЗржЙржЬрж╛рж░ ржЕрзНржпрж╛ржб ржХрж░рзЗ
  const addedUsers = logMessageData.addedParticipants;

  for (const user of addedUsers) {
    const userID = user.userFbId;

    // ржпржжрж┐ ржмржЯ ржирж┐ржЬрзЗ ржпрзЛржЧ рж╣рзЯ, рждрж╛рж╣рж▓рзЗ рж╕рзНржХрж┐ржк
    if (userID == api.getCurrentUserID()) continue;

    try {
      await new Promise(res => setTimeout(res, 1000));
      await api.removeUserFromGroup(userID, threadID);

      const userName = await Users.getNameUser(userID);
      console.log(`ЁЯФ┤ Removed ${userName} (${userID}) due to Anti Join mode.`);
    } catch (err) {
      console.error(`тЭМ ржЗржЙржЬрж╛рж░ рж░рж┐ржорзБржн ржХрж░рждрзЗ рж╕ржорж╕рзНржпрж╛ рж╣рзЯрзЗржЫрзЗ: ${userID}`, err);
    }
  }

  return api.sendMessage(
    `ЁЯЪл ржЧрзНрж░рзБржкрзЗ Anti-Join ржорзЛржб ржЪрж╛рж▓рзБ ржЖржЫрзЗ!\n\nтЭЧ ржирждрзБржи ржорзЗржорзНржмрж╛рж░ ржЕрзНржпрж╛ржб ржХрж░рж▓рзЗ ржЕржЯрзЛ рж░рж┐ржорзБржн рж╣рзЯрзЗ ржпрж╛ржмрзЗред\nЁЯЫая╕П ржжрзЯрж╛ ржХрж░рзЗ ржЖржЧрзЗ ржПржЯрж┐ ржмржирзНржз ржХрж░рзБржи: /setbox newMember off`,
    threadID
  );
};
