module.exports.config = {
  name: "antiout",
  eventType: ["log:unsubscribe"],
  version: "1.1.0",
  credits: "ржирзВрж░ ржорзЛрж╣рж╛ржорзНржоржж",
  description: "ржХрзЗржЙ ржирж┐ржЬрзЗрж░ ржЗржЪрзНржЫрж╛рзЯ рж▓рж┐ржн ржирж┐рж▓рзЗ ржЖржмрж╛рж░ ржПржб ржХрж░рзЗ ржжрзЗрзЯ"
};

module.exports.run = async ({ event, api, Threads, Users }) => {
  const { threadID, logMessageData, author } = event;
  const leftUID = logMessageData.leftParticipantFbId;
  const botID = api.getCurrentUserID();

  // ржирж┐ржЬрзЗржЗ ржпржжрж┐ рж▓рж┐ржн рж╣рзЯ (ржмржЯ), рж╕рзНржХрж┐ржк ржХрж░рзЛ
  if (leftUID == botID) return;

  const threadData = await Threads.getData(threadID);
  const settings = threadData.data || {};
  if (settings.antiout !== true) return;

  const userName = global.data.userName.get(leftUID) || await Users.getNameUser(leftUID);

  const isSelfLeave = leftUID == author;

  if (isSelfLeave) {
    // ржЖржмрж╛рж░ ржПржб ржХрж░рзЛ
    api.addUserToGroup(leftUID, threadID, (err) => {
      if (err) {
        return api.sendMessage(
          `тЭМ ${userName} ржХрзЗ ржЖржмрж╛рж░ ржПржб ржХрж░рж╛ ржЧрзЗрж▓рзЛ ржирж╛!\nрж╕ржорзНржнржмржд ржЙржирж┐ ржмржЯржХрзЗ ржмрзНрж▓ржХ ржХрж░рзЗржЫрзЗ ржмрж╛ рждрж╛рж░ ржкрзНрж░рзЛржлрж╛ржЗрж▓рзЗ ржорзЗрж╕рзЗржЬ ржЕржи ржирж╛ ЁЯШЮ`,
          threadID
        );
      }

      return api.sendMessage(
        `ЁЯШ╝ рж╢рзЛржи рж╢рж╛рж▓рж╛рзЯ!\n${userName}, рждрзБржЗ ржЕржирзБржорждрж┐ ржЫрж╛рзЬрж╛ ржЧрзНрж░рзБржк ржЫрж╛рзЬрж╕рзЛрж╕?\n\nЁЯЫС ржПржЦрж╛ржирзЗ ржпрж╛ржЗрждрзЗ рж╣рж▓рзЗ ржирзВрж░ ржорзЛрж╣рж╛ржорзНржоржжрзЗрж░ ржЕржирзБржорждрж┐ рж▓рж╛ржЧрзЗ!\nрждрзЛрж░рзЗ ржЖржмрж╛рж░ mafia style-ржП ржПржб ржжрж┐рзЯрж╛ ржжрж┐рж▓рж╛ржо! ЁЯШИ`,
        threadID
      );
    });
  }
};
