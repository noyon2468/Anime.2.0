module.exports.config = {
  name: "leave",
  eventType: ["log:unsubscribe"],
  version: "1.1.0",
  credits: "‡¶®‡ßÇ‡¶∞ ‡¶Æ‡ßã‡¶π‡¶æ‡¶Æ‡ßç‡¶Æ‡¶¶",
  description: "‡¶ï‡ßá‡¶â ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™ ‡¶õ‡¶æ‡ßú‡¶≤‡ßá ‡¶ï‡¶æ‡¶∏‡ßç‡¶ü‡¶Æ ‡¶¨‡¶ø‡¶¶‡¶æ‡ßü‡ßÄ ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶¶‡ßá‡ßü",
  dependencies: {
    "fs-extra": "",
    "path": "",
    "moment-timezone": ""
  }
};

module.exports.onLoad = function () {
  const { existsSync, mkdirSync } = global.nodemodule["fs-extra"];
  const { join } = global.nodemodule["path"];

  const gifPath = join(__dirname, "cache", "leaveGif", "randomgif");
  if (!existsSync(gifPath)) mkdirSync(gifPath, { recursive: true });
};

module.exports.run = async function ({ api, event, Users, Threads }) {
  const { createReadStream, existsSync, readdirSync } = global.nodemodule["fs-extra"];
  const { join } = global.nodemodule["path"];
  const moment = require("moment-timezone");

  const { threadID, logMessageData, author } = event;
  const leftUID = logMessageData.leftParticipantFbId;

  if (leftUID == api.getCurrentUserID()) return;

  const time = moment.tz("Asia/Dhaka").format("DD/MM/YYYY || HH:mm:ss");
  const hours = parseInt(moment.tz("Asia/Dhaka").format("HH"));
  const session = hours < 11 ? "‡¶∏‡¶ï‡¶æ‡¶≤‡ßá‡¶∞" : hours <= 16 ? "‡¶¶‡ßÅ‡¶™‡ßÅ‡¶∞‡ßá‡¶∞" : hours <= 19 ? "‡¶¨‡¶ø‡¶ï‡¶æ‡¶≤‡ßá‡¶∞" : "‡¶∞‡¶æ‡¶§‡ßá‡¶∞";
  const type = (author == leftUID) ? "‡¶®‡¶ø‡¶ú‡ßá ‡¶ö‡¶≤‡ßá ‡¶ó‡ßá‡¶õ‡ßá‡¶®" : "‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶Æ‡¶ø‡¶®‡ßá‡¶∞ ‡¶Æ‡¶æ‡¶ß‡ßç‡¶Ø‡¶Æ‡ßá ‡¶¨‡¶æ‡¶¶ ‡¶™‡ßú‡ßá‡¶õ‡ßá‡¶®";

  const userName = global.data.userName.get(leftUID) || await Users.getNameUser(leftUID);
  const threadData = global.data.threadData.get(threadID) || (await Threads.getData(threadID)).data;

  let msg = typeof threadData.customLeave == "undefined"
    ? `üò¢ ‚îÅ‚îÅ„Äå ‡¶¨‡¶ø‡¶¶‡¶æ‡ßü‡ßá‡¶∞ ‡¶ò‡ßã‡¶∑‡¶£‡¶æ „Äç‚îÅ‚îÅ üò¢\n\nüå§Ô∏è {session} ‡¶è‡¶ï‡¶ú‡¶® ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™ ‡¶•‡ßá‡¶ï‡ßá ‡¶ö‡¶≤‡ßá ‡¶ó‡ßá‡¶õ‡ßá‡¶®...\nüë§ ‡¶®‡¶æ‡¶Æ: {name}\nüìå ‡¶Ö‡¶¨‡¶∏‡ßç‡¶•‡¶æ: {type}\nüïì ‡¶∏‡¶Æ‡ßü: {time}\n\nüí¨ ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶∏‡¶¨‡¶æ‡¶á ‡¶¨‡¶≤‡¶õ‡¶ø:\n"‡¶§‡ßã‡¶Æ‡¶æ‡ßü ‡¶Æ‡¶ø‡¶∏ ‡¶ï‡¶∞‡¶¨‡ßã ‡¶∞‡ßá ‡¶≠‡¶æ‡¶á/‡¶¨‡ßã‡¶®!" üò≠`
    : threadData.customLeave;

  msg = msg
    .replace(/\{name}/g, userName)
    .replace(/\{type}/g, type)
    .replace(/\{session}/g, session)
    .replace(/\{time}/g, time);

  const gifFolder = join(__dirname, "cache", "leaveGif", "randomgif");
  const gifFiles = existsSync(gifFolder) ? readdirSync(gifFolder) : [];
  const randomGif = gifFiles.length ? join(gifFolder, gifFiles[Math.floor(Math.random() * gifFiles.length)]) : null;

  const formPush = randomGif
    ? { body: msg, attachment: createReadStream(randomGif) }
    : { body: msg };

  return api.sendMessage(formPush, threadID);
};
